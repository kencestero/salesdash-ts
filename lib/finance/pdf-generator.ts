import { jsPDF } from "jspdf";
import autoTable from "jspdf-autotable";

export type SelectedPaymentOption = {
  mode: "CASH" | "FINANCE" | "RTO";
  label: string;
  amount: number; // Monthly payment or total cash
  term?: number; // Months (if applicable)
  down?: number; // Down payment
  details?: string; // Additional info (APR, etc.)
};

export type QuoteData = {
  // Customer Info
  customerName: string;
  customerPhone?: string;
  customerEmail?: string;

  // Rep Info
  repId: string;
  repName: string;
  repEmail: string;

  // Unit Info
  unitDescription?: string;
  unitPrice: number;
  taxPercent: number;
  fees: number;

  // Selected payment options (2-3 options)
  selectedOptions: SelectedPaymentOption[];

  // Timestamp
  quoteDate: string;
};

export function generateQuotePDF(data: QuoteData): void {
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();

  // Colors - MJ Cargo Branding
  const orangeColor: [number, number, number] = [238, 104, 50]; // #ee6832
  const darkBlue: [number, number, number] = [30, 41, 59]; // Dark blue from logo
  const lightGray: [number, number, number] = [240, 240, 240];

  // === HEADER SECTION ===
  // Orange banner at top
  doc.setFillColor(...orangeColor);
  doc.rect(0, 0, pageWidth, 35, "F");

  // MJ CARGO TRAILERS title - WHITE ON ORANGE, BOLD, LARGE
  doc.setTextColor(255, 255, 255); // White color
  doc.setFontSize(28); // Larger font
  doc.setFont("helvetica", "bold");
  doc.text("MJ CARGO TRAILERS", pageWidth / 2, 15, { align: "center" });

  // Finance Calculator subtitle - White, medium bold
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold"); // Medium bold
  doc.text("FINANCE CALCULATOR - Payment Quote", pageWidth / 2, 25, {
    align: "center",
  });

  // === QUOTE INFO BAR ===
  doc.setFillColor(...lightGray);
  doc.rect(10, 40, pageWidth - 20, 15, "F");

  doc.setTextColor(...darkBlue);
  doc.setFontSize(9);
  doc.setFont("helvetica", "bold");
  doc.text(`Quote Date: ${data.quoteDate}`, 15, 48);
  doc.text(`Generated by: ${data.repId}`, pageWidth / 2, 48, {
    align: "center",
  });
  doc.text(
    `Quote #${Math.random().toString(36).substr(2, 9).toUpperCase()}`,
    pageWidth - 15,
    48,
    { align: "right" }
  );

  let yPos = 65;

  // === CUSTOMER INFORMATION ===
  doc.setFillColor(...darkBlue);
  doc.rect(10, yPos, pageWidth - 20, 8, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("CUSTOMER INFORMATION", 15, yPos + 5.5);

  yPos += 12;
  doc.setTextColor(...darkBlue);
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.text(`Name: ${data.customerName}`, 15, yPos);
  yPos += 6;
  if (data.customerPhone) {
    doc.text(`Phone: ${data.customerPhone}`, 15, yPos);
    yPos += 6;
  }
  if (data.customerEmail) {
    doc.text(`Email: ${data.customerEmail}`, 15, yPos);
    yPos += 6;
  }

  yPos += 5;

  // === UNIT DETAILS ===
  doc.setFillColor(...darkBlue);
  doc.rect(10, yPos, pageWidth - 20, 8, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("UNIT DETAILS", 15, yPos + 5.5);

  yPos += 12;
  doc.setTextColor(...darkBlue);
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  if (data.unitDescription) {
    doc.text(`Unit: ${data.unitDescription}`, 15, yPos);
    yPos += 6;
  }
  doc.text(`Base Price: $${data.unitPrice.toLocaleString()}`, 15, yPos);
  yPos += 6;
  doc.text(`Tax: ${data.taxPercent.toFixed(2)}%`, 15, yPos);
  doc.text(`Fees: $${data.fees.toLocaleString()}`, pageWidth / 2, yPos);
  yPos += 10;

  // === PAYMENT OPTIONS (Side-by-side comparison) ===
  doc.setFillColor(...orangeColor);
  doc.rect(10, yPos, pageWidth - 20, 8, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("YOUR PAYMENT OPTIONS", 15, yPos + 5.5);

  yPos += 15;

  // Calculate column width based on number of options
  const numOptions = data.selectedOptions.length;
  const cardWidth = (pageWidth - 20 - (numOptions + 1) * 5) / numOptions;
  let xPos = 15;

  data.selectedOptions.forEach((option, index) => {
    // Card background
    doc.setFillColor(...lightGray);
    doc.roundedRect(xPos, yPos, cardWidth, 45, 3, 3, "F");

    // Option type badge
    const badgeColors: Record<string, [number, number, number]> = {
      CASH: [34, 197, 94], // Green
      FINANCE: [59, 130, 246], // Blue
      RTO: [168, 85, 247], // Purple
    };
    doc.setFillColor(...badgeColors[option.mode]);
    doc.roundedRect(xPos + 5, yPos + 5, cardWidth - 10, 7, 2, 2, "F");
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(9);
    doc.setFont("helvetica", "bold");
    doc.text(option.mode, xPos + cardWidth / 2, yPos + 9.5, {
      align: "center",
    });

    // Payment amount (large)
    doc.setTextColor(...darkBlue);
    doc.setFontSize(16);
    doc.setFont("helvetica", "bold");
    const paymentText =
      option.mode === "CASH"
        ? `$${option.amount.toLocaleString()}`
        : `$${option.amount.toFixed(2)}/mo`;
    doc.text(paymentText, xPos + cardWidth / 2, yPos + 22, {
      align: "center",
    });

    // Details (smaller)
    doc.setFontSize(8);
    doc.setFont("helvetica", "normal");
    let detailY = yPos + 28;

    if (option.term) {
      doc.text(
        `${option.term} months`,
        xPos + cardWidth / 2,
        detailY,
        { align: "center" }
      );
      detailY += 5;
    }

    if (option.down !== undefined) {
      doc.text(
        `Down: $${option.down.toLocaleString()}`,
        xPos + cardWidth / 2,
        detailY,
        { align: "center" }
      );
      detailY += 5;
    }

    if (option.details) {
      doc.setFontSize(7);
      doc.text(option.details, xPos + cardWidth / 2, detailY, {
        align: "center",
      });
    }

    xPos += cardWidth + 5;
  });

  yPos += 55;

  // === SIGNATURE LINE (MOVED TO BOTTOM) ===
  const footerY = pageHeight - 20;
  const signatureY = footerY - 25; // Place signature above footer

  doc.setFontSize(9);
  doc.setTextColor(...darkBlue);
  doc.text("Customer Signature:", 15, signatureY);
  doc.text("Date:", pageWidth - 60, signatureY);

  // Signature lines
  doc.setLineWidth(0.5);
  doc.setDrawColor(...darkBlue);
  doc.line(15, signatureY + 10, pageWidth / 2, signatureY + 10);
  doc.line(pageWidth - 60, signatureY + 10, pageWidth - 15, signatureY + 10);

  // === FOOTER ===
  doc.setFillColor(...darkBlue);
  doc.rect(0, footerY, pageWidth, 20, "F");

  doc.setTextColor(255, 255, 255);
  doc.setFontSize(8);
  doc.setFont("helvetica", "normal");
  doc.text(
    "MJ Cargo Trailers - Premium Enclosed Cargo Trailers & Equipment Trailers",
    pageWidth / 2,
    footerY + 5,
    { align: "center" }
  );
  doc.text(
    "We offer delivery service, and deliver for free subject to distance from our location.",
    pageWidth / 2,
    footerY + 10,
    { align: "center" }
  );
  doc.text(
    "This quote and prices subject to change without notice.",
    pageWidth / 2,
    footerY + 14,
    { align: "center" }
  );
  doc.setFontSize(7);
  doc.text(
    `Rep: ${data.repName} | ${data.repEmail}`,
    pageWidth / 2,
    footerY + 17,
    { align: "center" }
  );

  // === SAVE PDF ===
  const fileName = `MJ_Quote_${data.customerName.replace(/\s+/g, "_")}_${new Date().getTime()}.pdf`;
  doc.save(fileName);
}
