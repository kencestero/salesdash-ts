// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js Models
// Docs: https://next-auth.js.org/adapters/prisma

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   // For email/password authentication
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  profile  UserProfile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// MJ Cargo SalesDash Models

model UserProfile {
  id              String   @id @default(cuid())
  userId          String   @unique
  firstName       String?
  lastName        String?
  phone           String?
  zipcode         String?
  city            String?
  zip             String?  // Legacy field, use zipcode instead
  salespersonCode String?  @unique // REP12345, SMR12345, or VIP12345
  role            String   @default("salesperson") // "owner", "manager", "salesperson"
  member          Boolean  @default(false) // Join code verified
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([role])
  @@index([member])
  @@index([salespersonCode])
}

// Inventory Management
model Trailer {
  id              String   @id @default(cuid())
  vin             String   @unique // Vehicle Identification Number
  stockNumber     String   @unique // Internal stock number

  // Basic Info
  manufacturer    String   // e.g., "Big Tex", "PJ Trailers"
  model           String
  year            Int
  category        String   // e.g., "Utility", "Dump", "Enclosed", "Gooseneck"

  // Specifications
  length          Float    // in feet
  width           Float    // in feet
  height          Float?   // in feet
  gvwr            Int?     // Gross Vehicle Weight Rating (lbs)
  capacity        Int?     // payload capacity (lbs)
  axles           Int?     // number of axles

  // Pricing
  msrp            Float    // Manufacturer's Suggested Retail Price
  salePrice       Float    // Current sale price
  cost            Float    // Dealer cost (sensitive!)

  // Status
  status          String   @default("available") // "available", "sold", "reserved", "pending"
  location        String?  // Physical location (lot, warehouse)

  // Media
  images          String[] // Array of image URLs
  description     String?  @db.Text
  features        String[] // Array of feature strings

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String?  // User ID who added it
  soldAt          DateTime?
  soldBy          String?  // Salesperson ID who sold it

  // Relations
  deals           Deal[]
  creditApps      CreditApplication[]
  quotes          Quote[]

  @@index([status])
  @@index([category])
  @@index([manufacturer])
  @@index([soldBy])
}

// CRM - Customer Relationship Management
model Customer {
  id              String   @id @default(cuid())

  // Personal Info
  firstName       String
  lastName        String
  email           String   @unique
  phone           String

  // Address
  street          String?
  city            String?
  state           String?
  zipcode         String?

  // Business Info (for commercial customers)
  companyName     String?
  businessType    String?  // "individual", "business", "contractor"

  // Lead Info
  source          String?  // "website", "referral", "walk-in", "phone"
  assignedTo      String?  // Salesperson ID
  status          String   @default("lead") // "lead", "contacted", "qualified", "negotiating", "won", "lost"

  // Tags for segmentation
  tags            String[]

  // Notes
  notes           String?  @db.Text

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  lastContactedAt DateTime?

  // Relations
  deals           Deal[]
  creditApps      CreditApplication[]
  activities      Activity[]
  emails          Email[]
  quotes          Quote[]

  @@index([email])
  @@index([status])
  @@index([assignedTo])
}

// Deal/Opportunity Tracking
model Deal {
  id              String   @id @default(cuid())

  // Customer & Trailer
  customerId      String
  trailerId       String?  // Nullable in case of custom orders

  // Deal Info
  dealNumber      String   @unique
  status          String   @default("pending") // "pending", "financing", "approved", "closed", "lost"
  dealType        String   // "cash", "finance", "trade"

  // Pricing
  offeredPrice    Float
  finalPrice      Float?
  tradeInValue    Float?
  tradeInDesc     String?  @db.Text
  deposit         Float?

  // Finance Info
  financeAmount   Float?
  downPayment     Float?
  apr             Float?
  term            Int?     // months
  monthlyPayment  Float?

  // Ownership
  salespersonId   String
  managerId       String?  // Manager who approved

  // Timeline
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  closedAt        DateTime?
  expectedCloseDate DateTime?

  // Notes
  notes           String?  @db.Text

  // Relations
  customer        Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  trailer         Trailer? @relation(fields: [trailerId], references: [id])

  @@index([customerId])
  @@index([trailerId])
  @@index([salespersonId])
  @@index([status])
}

// Credit Application System
model CreditApplication {
  id              String   @id @default(cuid())
  appNumber       String   @unique

  // Shareable Link
  shareToken      String?  @unique // For public access
  shareEnabled    Boolean  @default(true)
  expiresAt       DateTime? // Optional expiration

  // Customer Info
  customerId      String?  // Optional - public forms may create new customers
  trailerId       String?

  // Personal Info (from form)
  firstName       String
  lastName        String
  email           String
  phone           String
  street          String?
  city            String?
  state           String?
  zipcode         String?

  ssn             String?  // Encrypted! Handle with care
  dob             DateTime?
  driverLicense   String?
  dlState         String?

  // Employment
  employer        String?
  jobTitle        String?
  employmentYears Int?
  monthlyIncome   Float?

  // Housing
  housingStatus   String?  // "own", "rent", "other"
  monthlyPayment  Float?
  yearsAtAddress  Int?

  // Equipment Details
  requestedAmount Float?
  requestedTerm   Int?      // months
  equipmentType   String?   // "utility", "dump", "enclosed", etc.
  equipmentDesc   String?   @db.Text

  // References
  references      Json?    // Array of reference objects

  // E-Signature & Legal
  signatureData   String?  @db.Text // Base64 signature image
  signedAt        DateTime?
  ipAddress       String?
  userAgent       String?
  legalConsent    Boolean  @default(false)
  legalText       String?  @db.Text // What they agreed to

  // Status
  status          String   @default("pending") // "pending", "submitted", "approved", "declined", "needs_review"
  submittedAt     DateTime?
  decidedAt       DateTime?

  // Approval Details
  approvedAmount  Float?
  approvedTerm    Int?
  approvedApr     Float?
  lender          String?  // Which finance company approved

  // Notes
  notes           String?  @db.Text

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String?  // Salesperson who created it (nullable for public submissions)

  // Relations
  customer        Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)
  trailer         Trailer? @relation(fields: [trailerId], references: [id])

  @@index([customerId])
  @@index([status])
  @@index([createdBy])
  @@index([shareToken])
  @@index([email])
}

// Activity Tracking (for CRM)
model Activity {
  id              String   @id @default(cuid())

  // Related To
  customerId      String?
  userId          String?  // User who performed activity

  // Activity Details
  type            String   // "call", "email", "meeting", "note", "task"
  subject         String
  description     String?  @db.Text

  // Status (for tasks)
  status          String?  // "pending", "completed", "cancelled"
  dueDate         DateTime?
  completedAt     DateTime?

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  customer        Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@index([customerId])
  @@index([userId])
  @@index([type])
  @@index([dueDate])
}

// Email System
model Email {
  id              String   @id @default(cuid())

  // Email Details
  from            String
  to              String[]
  cc              String[]
  bcc             String[]
  subject         String
  body            String   @db.Text
  htmlBody        String?  @db.Text

  // Attachments
  attachments     Json?    // Array of attachment metadata

  // Status
  status          String   @default("draft") // "draft", "sent", "failed", "scheduled"
  sentAt          DateTime?
  scheduledFor    DateTime?

  // Tracking
  opened          Boolean  @default(false)
  openedAt        DateTime?
  clicked         Boolean  @default(false)
  clickedAt       DateTime?

  // Relations
  customerId      String?
  userId          String   // User who sent/created

  // Template
  templateId      String?

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  customer        Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)

  @@index([customerId])
  @@index([userId])
  @@index([status])
  @@index([sentAt])
}

// Email Templates
model EmailTemplate {
  id              String   @id @default(cuid())
  name            String
  subject         String
  body            String   @db.Text
  htmlBody        String?  @db.Text

  // Variables (e.g., {{firstName}}, {{trailerModel}})
  variables       String[]

  // Category
  category        String?  // "follow-up", "thank-you", "reminder", "marketing"

  // Metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String

  @@index([category])
}

// Finance Quote System
enum PricingMode {
  CASH
  FINANCE
  RTO
}

enum QuoteStatus {
  DRAFT
  SENT
  ACCEPTED
  CONVERTED
  EXPIRED
  REJECTED
}

enum QuoteAction {
  CREATED
  VIEWED_BY_REP
  VIEWED_BY_CUSTOMER
  EDITED
  LINK_GENERATED
  LINK_CLICKED
  PDF_GENERATED
  PDF_DOWNLOADED
  EMAIL_SENT
  SMS_SENT
  FORMULA_COPIED
  ACCEPTED
  REJECTED
  EXPIRED
  CONVERTED_TO_SALE
}

model Quote {
  id              String       @id @default(cuid())
  userId          String       // Rep who created the quote
  salespersonCode String       // Rep's unique code for filtering

  // Related entities
  trailerId       String?
  trailer         Trailer?     @relation(fields: [trailerId], references: [id])

  customerId      String?
  customer        Customer?    @relation(fields: [customerId], references: [id])

  // Pricing mode
  mode            PricingMode  @default(FINANCE)

  // Shared fields
  unitPrice       Float
  downPayment     Float        @default(0)
  taxRate         Float        // Percentage (e.g., 8.25)
  fees            Float        @default(0)
  termMonths      Int

  // Finance-specific fields
  apr             Float?
  monthlyPayment  Float?
  totalInterest   Float?
  principal       Float?

  // RTO-specific fields
  monthlyRent     Float?
  monthlyTax      Float?
  docFee          Float?
  buyoutFee       Float?
  rtoPrice        Float?

  // Cash-specific
  totalCash       Float?

  // Status and lifecycle
  status          QuoteStatus  @default(DRAFT)
  expiresAt       DateTime

  // Sharing settings
  shareToken      String?      @unique
  shareEnabled    Boolean      @default(false)
  visibilitySettings Json?     // { showAPR: false, showFees: true, ... }

  // Metadata
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  // Relations
  activities      QuoteActivity[]

  @@index([salespersonCode])
  @@index([status])
  @@index([trailerId])
  @@index([customerId])
  @@index([userId])
  @@index([expiresAt])
}

model QuoteActivity {
  id            String      @id @default(cuid())
  quoteId       String
  quote         Quote       @relation(fields: [quoteId], references: [id], onDelete: Cascade)

  // Actor information
  userId        String?
  salespersonCode String?
  actorType     String      // "REP" | "CUSTOMER" | "SYSTEM"
  actorName     String?

  // Action details
  action        QuoteAction
  changes       Json?       // Field-level changes for EDITED action

  // Request metadata
  ipAddress     String?
  userAgent     String?
  durationMs    Int?        // Time spent viewing (for VIEWED actions)

  // Timestamp
  occurredAt    DateTime    @default(now())

  @@index([quoteId])
  @@index([salespersonCode])
  @@index([action])
  @@index([occurredAt])
}

model PricingPolicy {
  id                    Int      @id @default(1)

  // RTO defaults
  rtoBaseMarkupUsd      Float    @default(1400)
  rtoMonthlyFactor      Float    @default(0.035)  // 3.5%
  rtoMinDownUsd         Float    @default(200)
  rtoDocFeeUsd          Float    @default(99)
  rtoBuyoutFeeUsd       Float    @default(250)
  rtoDefaultTermMonths  Int      @default(36)

  // Finance defaults
  defaultApr            Float    @default(8.99)
  defaultTermMonths     Int      @default(60)

  // Cash defaults
  defaultFees           Float    @default(125)

  // Quote settings
  quoteExpirationDays   Int      @default(90)

  updatedAt             DateTime @updatedAt
}
